#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
PROJECT EULER - PROBLEM 2
EVEN FIBONACCI NUMBERS

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

      1,2,3,5,8,13,21,34,55,89, ...

By considering the terms in the Fibonacci sequence whoose values do not exceed four million, 
find the sum of the even-valued terms.
"""


def evenFibSum(n):
    """Returns the sum of all even-valued Fibonacci numbers below n
    """

    # The Fibonacci sequence: f(n) = f(n-1) + f(n-2)

    # Starting with f(1)=1 and f(2)=1, every third term is even:
    #   1,1,  2,  3,5,  8,  13,21,  34,  55,89, ...

    a=1 # Always odd
    b=1 # Always odd
    c=0 # Always even

    s=0 # Sum of even-valued terms

    while c < n:
        # Add even term
        s = s + c

        # Get next 3 terms
        c = a + b
        a = b + c
        b = c + a
    
    return s


print(evenFibSum(4000000))
